{"ts":1354504208676,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,";(function ($, window, document, undefined) {\n  'use strict';\n\n  var settings = {\n        callback: $.noop,\n        init: false\n      }, \n\n      methods = {\n        init : function (options) {\n          settings = $.extend({}, options, settings);\n\n          return this.each(function () {\n            if (!settings.init) methods.events();\n          });\n        },\n\n        events : function () {\n          $(document).on('click.fndtn', '.tabs a', function (e) {\n            methods.set_tab($(this).parent('dd, li'), e);\n          });\n          \n          settings.init = true;\n        },\n\n        set_tab : function ($tab, e) {\n          var $activeTab = $tab.closest('dl, ul').find('.active'),\n              target = $tab.children('a').attr(\"href\"),\n              hasHash = /^#/.test(target),\n              $content = $(target + 'Tab');\n\n          if (hasHash && $content.length > 0) {\n            // Show tab content\n            e.preventDefault();\n            $content.closest('.tabs-content').children('li').removeClass('active').hide();\n            $content.css('display', 'block').addClass('active');\n          }\n\n          // Make active tab\n          $activeTab.removeClass('active');\n          $tab.addClass('active');\n\n          settings.callback();\n        }\n      }\n\n  $.fn.foundationTabs = function (method) {\n    if (methods[method]) {\n      return methods[method].apply(this, Array.prototype.slice.call(arguments, 1));\n    } else if (typeof method === 'object' || !method) {\n      return methods.init.apply(this, arguments);\n    } else {\n      $.error('Method ' +  method + ' does not exist on jQuery.foundationTooltips');\n    }\n  };\n}(jQuery, this, this.document));\n"]],"start1":0,"start2":0,"length1":0,"length2":1682}]],"length":1682}
